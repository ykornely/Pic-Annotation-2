[{"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\index.tsx":"1","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\App.tsx":"2","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Login.tsx":"3","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\api.ts":"4","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Pictures.tsx":"5","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Signup.tsx":"6","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Editor.tsx":"7"},{"size":218,"mtime":1611333010542,"results":"8","hashOfConfig":"9"},{"size":912,"mtime":1611595140271,"results":"10","hashOfConfig":"9"},{"size":1639,"mtime":1611427142622,"results":"11","hashOfConfig":"9"},{"size":2562,"mtime":1611773990303,"results":"12","hashOfConfig":"9"},{"size":1598,"mtime":1611775184261,"results":"13","hashOfConfig":"9"},{"size":2362,"mtime":1611427175652,"results":"14","hashOfConfig":"9"},{"size":4205,"mtime":1611780578055,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1t08ir4",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\index.tsx",[],["33","34"],"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\App.tsx",[],"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Login.tsx",["35"],"import { useState } from 'react'\r\nimport { login } from '../api'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = async (event: any) => {\r\n        event.preventDefault()\r\n        const { token } = await login({ email, password })\r\n\r\n        localStorage.setItem('token', token)\r\n\r\n        history.push('/pictures')\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div id=\"formContent\">\r\n                <div>\r\n                    <img src=\"/img/single_user.png\" id=\"icon\" alt=\"User Icon\" />\r\n                </div>\r\n                <form id=\"signInForm\" onSubmit={handleSubmit}>\r\n                    <input id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} type=\"text\" name=\"email\" placeholder=\"Email\" />\r\n                    <div>{error === 'invalid-email' && <label className=\"validation-message\">Invalid email address.</label>}</div>\r\n                    <input id=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} type=\"password\" name=\"password\" placeholder=\"Password\" required />\r\n                    <div>{error === 'min-4-char' && <label className=\"validation-message\">Minimum 4 characters.</label>}</div>\r\n                    <input type=\"submit\" value=\"Sign In\" />\r\n                </form>\r\n                {error !== '' && <div className=\"alert\"></div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\api.ts",["36","37","38"],"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Pictures.tsx",["39"],"C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Signup.tsx",["40"],"import { useState } from 'react'\r\nimport { login, signup } from '../api'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [fullName, setFullName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [error, setError] = useState('')\r\n\r\n    const handleSubmit = async (event: any) => {\r\n        event.preventDefault()\r\n        await signup({ fullName, email, password })\r\n        const { token } = await login({ email, password })\r\n\r\n        localStorage.setItem('token', token)\r\n\r\n        history.push('/pictures')\r\n    }\r\n\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div id=\"formContent\">\r\n                <div>\r\n                    <img src=\"/img/users.png\" id=\"icon\" alt=\"User Icon\" />\r\n                </div>\r\n                <form id=\"signUpForm\" onSubmit={handleSubmit}>\r\n                    <input type=\"text\" id=\"fullName\" value={fullName} onChange={(event) => setFullName(event.target.value)} name=\"fullName\" placeholder=\"Full Name\" required />\r\n                    <div>{error === 'full-name-required' && <label className=\"validation-message\">This field is required.</label>}</div>\r\n                    <input type=\"text\" id=\"email\" value={email} onChange={(event) => setEmail(event.target.value)} name=\"email\" placeholder=\"Email\" required />\r\n                    <div>\r\n                        {error === 'email-required' && <label className=\"validation-message\">This field is required.</label>}\r\n                        {error === 'invalid-email' && <label className=\"validation-message\">Invalid email address.</label>}\r\n                    </div>\r\n                    <input type=\"password\" id=\"password\" value={password} onChange={(event) => setPassword(event.target.value)} name=\"password\" placeholder=\"Password\" required />\r\n                    <div>\r\n                        {error === 'password-required' && <label className=\"validation-message\">This field is required.</label>}\r\n                        {error === 'min-4-char' && <label className=\"validation-message\">Enter atleast 4 characters.</label>}\r\n                    </div>\r\n                    <input type=\"submit\" value=\"Sign Up\" />\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Signup\r\n","C:\\Users\\Bruno\\Desktop\\Szakdolgozat\\Pic-Annotation\\client\\src\\pages\\Editor.tsx",["41","42"],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":9,"column":19,"nodeType":"49","messageId":"50","endLine":9,"endColumn":27},{"ruleId":"47","severity":1,"message":"51","line":1,"column":8,"nodeType":"49","messageId":"50","endLine":1,"endColumn":13},{"ruleId":"47","severity":1,"message":"52","line":49,"column":11,"nodeType":"49","messageId":"50","endLine":49,"endColumn":19},{"ruleId":"47","severity":1,"message":"52","line":59,"column":11,"nodeType":"49","messageId":"50","endLine":59,"endColumn":19},{"ruleId":"53","severity":1,"message":"54","line":28,"column":29,"nodeType":"55","endLine":28,"endColumn":94},{"ruleId":"47","severity":1,"message":"48","line":10,"column":19,"nodeType":"49","messageId":"50","endLine":10,"endColumn":27},{"ruleId":"47","severity":1,"message":"56","line":6,"column":10,"nodeType":"49","messageId":"50","endLine":6,"endColumn":14},{"ruleId":"57","severity":1,"message":"58","line":28,"column":8,"nodeType":"59","endLine":28,"endColumn":10,"suggestions":"60"},"no-native-reassign",["61"],"no-negated-in-lhs",["62"],"@typescript-eslint/no-unused-vars","'setError' is assigned a value but never used.","Identifier","unusedVar","'Login' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Link' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'params.pictureId'. Either include it or remove the dependency array.","ArrayExpression",["63"],"no-global-assign","no-unsafe-negation",{"desc":"64","fix":"65"},"Update the dependencies array to be: [params.pictureId]",{"range":"66","text":"67"},[1042,1044],"[params.pictureId]"]